{"version":3,"sources":["components/Carousel.js","components/СarouselSettings.js","components/CarouselBlock.js","App.js","index.js"],"names":["cn","classNames","bind","styles","Carousel","state","scrollLeft","visualizedImages","singleImages","doubleImages","animation","disabled","clickHandler","value","props","animationDuration","itemWidth","frameSize","step","maxWidthScroll","length","widthScroll","scrollStep","setState","setTimeout","clickHandlerInfinite","newVisualizedImages","splice","forEach","image","push","reverse","unshift","this","images","map","img","id","uuidv4","alt","prevProps","infinite","buttonPrevDisabled","buttonNextDisabled","buttonPrevClassName","buttonNextClassName","className","type","onClick","style","width","left","transition","key","src","React","Component","СarouselSettings","onChangeInput","event","target","name","checked","changeState","onChange","CarouselBlock","date","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcb333bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './Carousel.scss';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    scrollLeft: 0,\r\n    visualizedImages: [],\r\n    singleImages: [],\r\n    doubleImages: [],\r\n    animation: true,\r\n    disabled: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const singleImages = this.props.images.map(image => {\r\n      return {\r\n        img: image,\r\n        id: uuidv4(),\r\n        alt: 'smile',\r\n      };\r\n    });\r\n\r\n    const doubleImages = [...this.props.images, ...this.props.images]\r\n      .map(image => {\r\n        return {\r\n          img: image,\r\n          id: uuidv4(),\r\n          alt: 'smile',\r\n        };\r\n      });\r\n\r\n    this.setState({\r\n      visualizedImages: singleImages,\r\n      singleImages: singleImages,\r\n      doubleImages: doubleImages,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.infinite !== this.props.infinite\r\n        || prevProps.frameSize !== this.props.frameSize\r\n        || prevProps.itemWidth !== this.props.itemWidth) {\r\n      this.setState({\r\n        animation: false,\r\n        scrollLeft: 0,\r\n        visualizedImages: this.props.infinite ? this.state.doubleImages : this.state.singleImages,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          animation: true,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  clickHandler = (value) => {\r\n    const {\r\n      scrollLeft,\r\n      singleImages\r\n    } = this.state;\r\n\r\n    const {\r\n      animationDuration,\r\n      itemWidth,\r\n      frameSize,\r\n      step,\r\n    } = this.props;\r\n\r\n    const maxWidthScroll = (itemWidth * singleImages.length) - (itemWidth * frameSize);\r\n\r\n    const widthScroll = itemWidth * step;\r\n\r\n    let scrollStep = widthScroll;\r\n\r\n    if (!value && (scrollLeft + widthScroll >= 0)) {\r\n      scrollStep = 0 - scrollLeft;\r\n    }\r\n\r\n    if (value && (scrollLeft - widthScroll <= -maxWidthScroll)) {\r\n      scrollStep = maxWidthScroll + scrollLeft;\r\n    }\r\n\r\n    this.setState((state) => ({\r\n      animation: true,\r\n      disabled: true,\r\n      scrollLeft: value\r\n        ? state.scrollLeft - scrollStep\r\n          : state.scrollLeft + scrollStep,\r\n    }));\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        disabled: false,\r\n      });\r\n    }, animationDuration);\r\n  }\r\n\r\n  clickHandlerInfinite = (value) => {\r\n    const { visualizedImages } = this.state;\r\n\r\n    const {\r\n      step,\r\n      itemWidth,\r\n      animationDuration\r\n    } = this.props;\r\n\r\n    const scrollStep = itemWidth * step;\r\n\r\n    if (value) {\r\n      this.setState({\r\n        disabled: true,\r\n        animation: true,\r\n        scrollLeft: 0 - scrollStep,\r\n      });\r\n  \r\n      const newVisualizedImages = [...visualizedImages];\r\n      const removeImages = newVisualizedImages.splice(0, step);\r\n      removeImages.forEach(image => newVisualizedImages.push(image));\r\n  \r\n      setTimeout(() => {\r\n        this.setState({\r\n          disabled: false,\r\n          animation: false,\r\n          scrollLeft: 0,\r\n          visualizedImages: newVisualizedImages,\r\n        });\r\n      }, animationDuration);\r\n    }\r\n\r\n    if (!value) {\r\n      const newVisualizedImages = [...visualizedImages];\r\n      const removeImages = newVisualizedImages.splice(visualizedImages.length - step, step);\r\n      removeImages\r\n        .reverse()\r\n        .forEach(image => newVisualizedImages.unshift(image));\r\n\r\n      this.setState({\r\n        disabled: true,\r\n        animation: false,\r\n        visualizedImages: newVisualizedImages,\r\n        scrollLeft: 0 - scrollStep,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          animation: true,\r\n          scrollLeft: 0,\r\n        });\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          disabled: false,\r\n        });\r\n      }, animationDuration);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      scrollLeft,\r\n      visualizedImages,\r\n      singleImages,\r\n      animation,\r\n      disabled\r\n    } = this.state;\r\n\r\n    const {\r\n      frameSize = 3,\r\n      itemWidth = 130,\r\n      animationDuration = 1000,\r\n      infinite = false,\r\n    } = this.props;\r\n\r\n    const buttonPrevDisabled = !infinite && scrollLeft === 0;\r\n    const buttonNextDisabled = !infinite && scrollLeft === -((itemWidth * singleImages.length) - (itemWidth * frameSize));\r\n\r\n    const buttonPrevClassName = cn('button', {disabled: buttonPrevDisabled});\r\n    const buttonNextClassName = cn('button', {disabled: buttonNextDisabled});\r\n\r\n    return (\r\n      <div className=\"container-carousel\">\r\n        <button\r\n          type=\"button\"\r\n          disabled={disabled || buttonPrevDisabled}\r\n          className={buttonPrevClassName}\r\n          onClick={\r\n            infinite\r\n              ? () => {this.clickHandlerInfinite(0)}\r\n              : () => {this.clickHandler(0)}\r\n          }\r\n        >\r\n          &lt;\r\n        </button>\r\n        <div\r\n          className=\"wrapper-carousel\"\r\n          style={{ width: itemWidth * frameSize }}\r\n        >\r\n          <div\r\n            className=\"Carousel\"\r\n            style={{\r\n              width: itemWidth * singleImages.length,\r\n              left: scrollLeft,\r\n              transition: animation ? `left ${animationDuration / 1000}s ease-in-out` : 'none',\r\n            }}\r\n          >\r\n            <ul className=\"Carousel__list\">\r\n              {visualizedImages.map(image => (\r\n                <li\r\n                  key={image.id}\r\n                  className=\"Carousel__image\"\r\n                >\r\n                  <img\r\n                    width={itemWidth}\r\n                    src={image.img}\r\n                    alt={image.alt}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          disabled={disabled || buttonNextDisabled}\r\n          className={buttonNextClassName}\r\n          onClick={\r\n            infinite\r\n              ? () => {this.clickHandlerInfinite(1)}\r\n              : () => {this.clickHandler(1)}\r\n          }\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\n\nimport './СarouselSettings.scss';\n\nclass СarouselSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInput = this.onChangeInput.bind(this);\n  }\n\n  onChangeInput(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.props.changeState(name, value);\n  }\n\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    return (\n      <div className=\"controlUnit\">\n        <h2 className=\"title\">Сarousel settings</h2>\n        <div className=\"inputBox\">\n          <p className=\"inputText\">Step:</p>\n          <input\n            className=\"input\"\n            type=\"number\"\n            name=\"step\"\n            value={step}\n            onChange={this.onChangeInput}\n          />\n        </div>\n        <div className=\"inputBox\">\n          <p className=\"inputText\">Frame size:</p>\n          <input\n            className=\"input\"\n            type=\"number\"\n            name=\"frameSize\"\n            value={frameSize}\n            onChange={this.onChangeInput}\n          />\n        </div>\n        <div className=\"inputBox\">\n          <p className=\"inputText\">Image width:</p>\n          <input\n            className=\"input\"\n            type=\"number\"\n            name=\"itemWidth\"\n            value={itemWidth}\n            onChange={this.onChangeInput}\n          />\n        </div>\n        <div className=\"inputBox\">\n          <p className=\"inputText\">Animation duration:</p>\n          <input\n            className=\"input\"\n            type=\"number\"\n            name=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.onChangeInput}\n          />\n        </div>\n        <div className=\"inputBox\">\n          <p className=\"inputText\">Infinite calousel:</p>\n          <input\n            className=\"input\"\n            type=\"checkbox\"\n            name=\"infinite\"\n            checked={infinite}\n            onChange={this.onChangeInput}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default СarouselSettings;\n","import React from 'react';\nimport Carousel from './Carousel';\nimport СarouselSettings from './СarouselSettings';\n\nclass CarouselBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeState = this.changeState.bind(this);\n    this.state = {\n      images: this.props.images,\n      step: 3,\n      frameSize: 3,\n      itemWidth: 130,\n      animationDuration: 1000,\n      infinite: false,\n    };\n  }\n\n  changeState(name, value) {\n    const { images } = this.state;\n\n    let date = value;\n\n    if ((name === 'step' || name === 'frameSize') && value > images.length) {\n      date = images.length;\n    }\n\n    if ((name === 'step' || name === 'frameSize') && value < 1) {\n      date = 1;\n    }\n\n    if (name === 'itemWidth' && value < 100) {\n      date = 100;\n    }\n\n    if (name === 'itemWidth' && value > 250) {\n      date = 250;\n    }\n\n    if (name === 'animationDuration' && value < 500) {\n      date = 500;\n    }\n\n    if (name === 'animationDuration' && value > 2000) {\n      date = 2000;\n    }\n\n    this.setState({\n      [name]: date,\n    });\n  }\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <СarouselSettings\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          changeState={this.changeState}\n        />\n      </>\n    );\n  }\n}\n\nexport default CarouselBlock;\n","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport CarouselBlock from './components/CarouselBlock';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    images: [\r\n      './img/1.png',\r\n      './img/2.png',\r\n      './img/3.png',\r\n      './img/4.png',\r\n      './img/5.png',\r\n      './img/6.png',\r\n      './img/7.png',\r\n      './img/8.png',\r\n      './img/9.png',\r\n      './img/10.png',\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* eslint-disable-next-line */}\r\n        <h1>Carousel with {images.length} images</h1>\r\n\r\n        <CarouselBlock\r\n          images={images}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}