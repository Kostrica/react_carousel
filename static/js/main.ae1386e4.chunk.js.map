{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["cn","classNames","bind","styles","Carousel","state","scrollLeft","images","props","jump","clickHandlerNext","step","frameSize","itemWidth","widthScroll","maxWidthScroll","length","scrollStep","setState","clickHandlerNextCarousel","animationDuration","copyImages","splice","forEach","image","push","setTimeout","clickHandlerPrev","clickHandlerPrevCarousel","reverse","unshift","this","infinite","buttonPrevClassName","hiden","buttonNextClassName","className","type","onClick","style","width","left","transition","map","key","id","src","img","alt","React","Component","App","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"wSAKMA,EAAKC,IAAWC,KAAKC,KAuKZC,E,4MApKbC,MAAQ,CACNC,WAAY,EACZC,OAAQ,EAAKC,MAAMD,OACnBE,MAAM,G,EAGRC,iBAAmB,WACjB,MAA+B,EAAKL,MAA5BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OACpB,EAAuC,EAAKC,MAApCG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAEnBC,EAAcD,EAAYF,EAC1BI,EAAkBF,EAAYN,EAAOS,OAAWH,EAAYD,EAC9DK,EAAaH,EAEbR,EAAaQ,IAAgBC,IAC/BE,EAAaF,EAAiBT,GAGhC,EAAKY,UAAS,SAACb,GAAD,MAAY,CACxBC,WAAYD,EAAMC,WAAaW,O,EAInCE,yBAA2B,WACzB,IAAQZ,EAAW,EAAKF,MAAhBE,OACR,EAA+C,EAAKC,MAA5CG,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAAWO,EAAzB,EAAyBA,kBAEnBH,EAAaJ,EAAYF,EAE/B,EAAKO,SAAS,CACZT,MAAM,EACNH,WAAY,EAAIW,IAGlB,IAAMI,EAAU,YAAOd,GACFc,EAAWC,OAAO,EAAGX,GAC7BY,SAAQ,SAAAC,GAAK,OAAIH,EAAWI,KAAKD,MAE9CE,YAAW,WACT,EAAKR,SAAS,CACZT,MAAM,EACNH,WAAY,EACZC,OAAQc,MAETD,I,EAGLO,iBAAmB,WACjB,IAAQrB,EAAe,EAAKD,MAApBC,WACR,EAA4B,EAAKE,MAAzBG,EAAR,EAAQA,KAEFG,EAFN,EAAcD,UAEkBF,EAC5BM,EAAaH,EAEbR,EAAaQ,GAAe,IAC9BG,EAAa,EAAIX,GAGnB,EAAKY,UAAS,SAACb,GAAD,MAAY,CACxBC,WAAYD,EAAMC,WAAaW,O,EAInCW,yBAA2B,WACzB,IAAQrB,EAAW,EAAKF,MAAhBE,OACR,EAA4B,EAAKC,MAAzBG,EAAR,EAAQA,KAEFM,EAFN,EAAcJ,UAEiBF,EAE/B,EAAKO,SAAS,CACZT,MAAM,EACNH,WAAY,EAAIW,IAGlB,IAAMI,EAAU,YAAOd,GACFc,EAAWC,OAAOf,EAAOS,OAASL,EAAMA,GAE1DkB,UACAN,SAAQ,SAAAC,GAAK,OAAIH,EAAWS,QAAQN,MAEvC,EAAKN,SAAS,CACZT,MAAM,EACNF,OAAQc,EACRf,WAAY,EAAIW,IAGlBS,YAAW,WACT,EAAKR,SAAS,CACZT,MAAM,EACNH,WAAY,Q,4CAKlB,WACE,MAAqCyB,KAAK1B,MAAlCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAAQE,EAA5B,EAA4BA,KAE5B,EAKIsB,KAAKvB,MALT,IACEI,iBADF,MACc,EADd,MAEEC,iBAFF,MAEc,IAFd,MAGEO,yBAHF,MAGsB,IAHtB,MAIEY,gBAJF,SAOMC,EAAsBjC,EAAG,SAAU,CAACkC,OAAQF,GAA2B,IAAf1B,IACxD6B,EAAsBnC,EAAG,SAAU,CAACkC,MAAO5B,MAAkBO,EAAYN,EAAOS,OAAWH,EAAYD,KAE7G,OACE,yBAAKwB,UAAU,sBACb,4BACEC,KAAK,SACLD,UAAWH,EACXK,QACEN,EACID,KAAKH,yBACLG,KAAKJ,kBANb,KAWA,yBACES,UAAU,mBACVG,MAAO,CAAEC,MAAO3B,EAAYD,IAE5B,yBACEwB,UAAU,WACVG,MAAO,CACLC,MAAO3B,EAAYN,EAAOS,OAC1ByB,KAAMnC,EACNoC,WAAYjC,EAAI,eAAWW,EAAoB,IAA/B,iBAAqD,SAGvE,wBAAIgB,UAAU,kBACX7B,EAAOoC,KAAI,SAAAnB,GAAK,OACf,wBACEoB,IAAKpB,EAAMqB,GACXT,UAAU,mBAEV,yBACEI,MAAO3B,EACPiC,IAAKtB,EAAMuB,IACXC,IAAKxB,EAAMwB,aAOvB,4BACEX,KAAK,SACLD,UAAWD,EACXG,QACEN,EACID,KAAKZ,yBACLY,KAAKrB,kBANb,U,GArJeuC,IAAMC,WCgDdC,E,4MAhDb9C,MAAQ,CACNE,OAAQ,CACN,CAACwC,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,aACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,gBACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,eACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,SACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,iBACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,mBACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,eACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,gBACxC,CAACD,IAAK,cAAeF,GAAIO,cAAUJ,IAAK,mBACxC,CAACD,IAAK,eAAgBF,GAAIO,cAAUJ,IAAK,mBAE3CrC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXO,kBAAmB,IACnBY,UAAU,G,4CAGZ,WACE,MAOID,KAAK1B,MANPE,EADF,EACEA,OACAI,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAO,EALF,EAKEA,kBACAY,EANF,EAMEA,SAGF,OACE,yBAAKI,UAAU,OAEb,6CAAmB7B,EAAOS,OAA1B,WAEA,kBAAC,EAAD,CACET,OAAQA,EACRI,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXO,kBAAmBA,EACnBY,SAAUA,S,GA1CFiB,IAAMC,WCFxBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ae1386e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from './Carousel.scss';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    scrollLeft: 0,\r\n    images: this.props.images,\r\n    jump: true,\r\n  }\r\n\r\n  clickHandlerNext = () => {\r\n    const { scrollLeft, images } = this.state;\r\n    const { step, frameSize, itemWidth } = this.props;\r\n\r\n    const widthScroll = itemWidth * step;\r\n    const maxWidthScroll = (itemWidth * images.length) - (itemWidth * frameSize);\r\n    let scrollStep = widthScroll;\r\n\r\n    if (scrollLeft - widthScroll <= -maxWidthScroll) {\r\n      scrollStep = maxWidthScroll + scrollLeft;\r\n    }\r\n\r\n    this.setState((state) => ({\r\n      scrollLeft: state.scrollLeft - scrollStep,\r\n    }));\r\n  }\r\n\r\n  clickHandlerNextCarousel = () => {\r\n    const { images } = this.state;\r\n    const { step, itemWidth, animationDuration } = this.props;\r\n\r\n    const scrollStep = itemWidth * step;\r\n\r\n    this.setState({\r\n      jump: true,\r\n      scrollLeft: 0 - scrollStep,\r\n    });\r\n\r\n    const copyImages = [...images];\r\n    const removeImages = copyImages.splice(0, step);\r\n    removeImages.forEach(image => copyImages.push(image));\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        jump: false,\r\n        scrollLeft: 0,\r\n        images: copyImages,\r\n      });\r\n    }, animationDuration);\r\n  }\r\n\r\n  clickHandlerPrev = () => {\r\n    const { scrollLeft } = this.state;\r\n    const { step, itemWidth } = this.props;\r\n\r\n    const widthScroll = itemWidth * step;\r\n    let scrollStep = widthScroll;\r\n\r\n    if (scrollLeft + widthScroll >= 0) {\r\n      scrollStep = 0 - scrollLeft;\r\n    }\r\n\r\n    this.setState((state) => ({\r\n      scrollLeft: state.scrollLeft + scrollStep,\r\n    }));\r\n  }\r\n\r\n  clickHandlerPrevCarousel = () => {\r\n    const { images } = this.state;\r\n    const { step, itemWidth } = this.props;\r\n\r\n    const scrollStep = itemWidth * step;\r\n\r\n    this.setState({\r\n      jump: true,\r\n      scrollLeft: 0 + scrollStep,\r\n    });\r\n\r\n    const copyImages = [...images];\r\n    const removeImages = copyImages.splice(images.length - step, step);\r\n    removeImages\r\n      .reverse()\r\n      .forEach(image => copyImages.unshift(image));\r\n\r\n    this.setState({\r\n      jump: false,\r\n      images: copyImages,\r\n      scrollLeft: 0 - scrollStep,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        jump: true,\r\n        scrollLeft: 0,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { scrollLeft, images, jump } = this.state;\r\n\r\n    const {\r\n      frameSize = 3,\r\n      itemWidth = 130,\r\n      animationDuration = 1000,\r\n      infinite = false,\r\n    } = this.props;\r\n\r\n    const buttonPrevClassName = cn('button', {hiden: !infinite && scrollLeft === 0});\r\n    const buttonNextClassName = cn('button', {hiden: scrollLeft === -((itemWidth * images.length) - (itemWidth * frameSize))});\r\n\r\n    return (\r\n      <div className=\"container-carousel\">\r\n        <button\r\n          type=\"button\"\r\n          className={buttonPrevClassName}\r\n          onClick={\r\n            infinite\r\n              ? this.clickHandlerPrevCarousel\r\n              : this.clickHandlerPrev\r\n          }\r\n        >\r\n          &lt;\r\n        </button>\r\n        <div\r\n          className=\"wrapper-carousel\"\r\n          style={{ width: itemWidth * frameSize }}\r\n        >\r\n          <div\r\n            className=\"Carousel\"\r\n            style={{\r\n              width: itemWidth * images.length,\r\n              left: scrollLeft,\r\n              transition: jump ? `left ${animationDuration / 1000}s ease-in-out` : 'none',\r\n            }}\r\n          >\r\n            <ul className=\"Carousel__list\">\r\n              {images.map(image => (\r\n                <li\r\n                  key={image.id}\r\n                  className=\"Carousel__image\"\r\n                >\r\n                  <img\r\n                    width={itemWidth}\r\n                    src={image.img}\r\n                    alt={image.alt}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={buttonNextClassName}\r\n          onClick={\r\n            infinite\r\n              ? this.clickHandlerNextCarousel\r\n              : this.clickHandlerNext\r\n          }\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Carousel from './components/Carousel';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    images: [\r\n      {img: './img/1.png', id: uuidv4(), alt: 'Shy smile'},\r\n      {img: './img/2.png', id: uuidv4(), alt: 'Clever smile'},\r\n      {img: './img/3.png', id: uuidv4(), alt: 'Funny smile'},\r\n      {img: './img/4.png', id: uuidv4(), alt: 'Smile'},\r\n      {img: './img/5.png', id: uuidv4(), alt: 'Smile in love'},\r\n      {img: './img/6.png', id: uuidv4(), alt: 'Explosive smile'},\r\n      {img: './img/7.png', id: uuidv4(), alt: 'Ninja smile'},\r\n      {img: './img/8.png', id: uuidv4(), alt: 'Brutal smile'},\r\n      {img: './img/9.png', id: uuidv4(), alt: 'Surprised smile'},\r\n      {img: './img/10.png', id: uuidv4(), alt: 'Offended smile'},\r\n    ],\r\n    step: 3,\r\n    frameSize: 3,\r\n    itemWidth: 130,\r\n    animationDuration: 1000,\r\n    infinite: true,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      images,\r\n      step,\r\n      frameSize,\r\n      itemWidth,\r\n      animationDuration,\r\n      infinite,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* eslint-disable-next-line */}\r\n        <h1>Carousel with {images.length} images</h1>\r\n\r\n        <Carousel\r\n          images={images}\r\n          step={step}\r\n          frameSize={frameSize}\r\n          itemWidth={itemWidth}\r\n          animationDuration={animationDuration}\r\n          infinite={infinite}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}